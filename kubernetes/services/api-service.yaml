apiVersion: v1
kind: Service
metadata:
  name: animagenius-api
  namespace: animagenius-production
  labels:
    app: animagenius
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: animagenius
    component: api

---
apiVersion: v1
kind: Service
metadata:
  name: animagenius-worker
  namespace: animagenius-production
  labels:
    app: animagenius
    component: worker
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: metrics
    protocol: TCP
  selector:
    app: animagenius
    component: worker

---
apiVersion: v1
kind: Service
metadata:
  name: animagenius-gpu-worker
  namespace: animagenius-production
  labels:
    app: animagenius
    component: gpu-worker
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3002"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9092
    targetPort: metrics
    protocol: TCP
  selector:
    app: animagenius
    component: gpu-worker

---
# Headless service for StatefulSet components (if needed)
apiVersion: v1
kind: Service
metadata:
  name: animagenius-api-headless
  namespace: animagenius-production
  labels:
    app: animagenius
    component: api
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: animagenius
    component: api

---
# External service for database (if using external RDS)
apiVersion: v1
kind: Service
metadata:
  name: animagenius-database
  namespace: animagenius-production
  labels:
    app: animagenius
    component: database
spec:
  type: ExternalName
  externalName: animagenius-production.cluster-xxxxxxxxxxxx.us-east-1.rds.amazonaws.com
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP

---
# External service for Redis (if using external ElastiCache)
apiVersion: v1
kind: Service
metadata:
  name: animagenius-redis
  namespace: animagenius-production
  labels:
    app: animagenius
    component: redis
spec:
  type: ExternalName
  externalName: animagenius-production.cache.amazonaws.com
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP